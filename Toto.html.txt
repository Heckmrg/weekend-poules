<!DOCTYPE html>
<html lang="nl">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Voetbal Toto Poule - Multiweek</title>
<style>
  body { font-family: Arial, sans-serif; margin: 20px; }
  h1 { text-align: center; }
  table { border-collapse: collapse; width: 100%; margin-bottom: 20px; }
  th, td { border: 1px solid #ccc; padding: 8px; text-align: center; }
  th { background-color: #f2f2f2; }
  input[type=number] { width: 50px; }
  .hidden { display: none; }
</style>
</head>
<body>

<h1>Voetbal Toto Poule - Multiweek</h1>

<div id="links-section" class="hidden">
  <h2>Unieke links voor deelnemers</h2>
  <ul id="player-links"></ul>
</div>

<div id="form-section">
  <h2>Voorspellingen invullen</h2>
  <p id="player-name"></p>
  <p id="week-info"></p>
  <table id="predictions-table">
    <tr><th>Wedstrijd</th><th>Voorspelling (1=Thuis,2=Uit,3=Gelijk)</th></tr>
  </table>
  <button onclick="submitPrediction()">Verstuur voorspellingen</button>
</div>

<div id="admin-section" class="hidden">
  <h2>Uitslagen invoeren (Admin)</h2>
  <p id="week-admin-info"></p>
  <table id="results-table">
    <tr><th>Wedstrijd</th><th>Uitslag (1=Thuis,2=Uit,3=Gelijk)</th></tr>
  </table>
  <button onclick="calculatePoints()">Bereken punten</button>
  <h2>Overzicht punten</h2>
  <table id="overview-table">
    <tr><th>Deelnemer</th><th>Cumulatieve punten</th></tr>
  </table>
</div>

<script>
const NUM_MATCHES = 10;
const NUM_PLAYERS = 15;
const urlParams = new URLSearchParams(window.location.search);
const player = urlParams.get('player');
const week = urlParams.get('week') || '1';
const isAdmin = urlParams.has('admin');

// Wedstrijden per week instellen
const allWeeksMatches = {
  '1': ["Ajax vs PSV","Feyenoord vs AZ","Vitesse vs Utrecht","Twente vs Groningen","Heerenveen vs Fortuna","Sparta vs NEC","Cambuur vs Excelsior","ADO vs RKC","FC Emmen vs Volendam","PEC vs Willem II"],
  '2': ["PSV vs Feyenoord","AZ vs Ajax","Utrecht vs Twente","Groningen vs Heerenveen","Fortuna vs Sparta","NEC vs Cambuur","Excelsior vs ADO","RKC vs FC Emmen","Volendam vs PEC","Willem II vs Vitesse"]
};

let matches = allWeeksMatches[week] || Array(NUM_MATCHES).fill('Wedstrijd onbekend');

let predictions = JSON.parse(localStorage.getItem('predictions')) || {};
let weeklyResults = JSON.parse(localStorage.getItem('results_week_' + week)) || Array(NUM_MATCHES).fill('');
let cumulativePoints = JSON.parse(localStorage.getItem('cumulativePoints')) || {};

if(isAdmin) {
  document.getElementById('links-section').classList.remove('hidden');
  const list = document.getElementById('player-links');
  for(let i=1; i<=NUM_PLAYERS; i++) {
    let li = document.createElement('li');
    li.innerHTML = `<a href='toto.html?player=deelnemer${i}&week=${week}'>deelnemer${i} - week ${week}</a>`;
    list.appendChild(li);
  }
  document.getElementById('admin-section').classList.remove('hidden');
  document.getElementById('form-section').classList.add('hidden');
  document.getElementById('week-admin-info').innerText = `Week ${week}`;
}

if(player && !isAdmin) {
  document.getElementById('player-name').innerText = `Je bent ingelogd als: ${player}`;
  document.getElementById('week-info').innerText = `Week ${week}`;
}

const predTable = document.getElementById('predictions-table');
const resTable = document.getElementById('results-table');
for (let i=0; i<NUM_MATCHES; i++) {
  let row = predTable.insertRow();
  row.insertCell(0).innerText = matches[i];
  let cell1 = row.insertCell(1);
  let input = document.createElement('input');
  input.type = 'number'; input.min = 1; input.max = 3;
  if(predictions[player] && predictions[player][week] && predictions[player][week][i]) input.value = predictions[player][week][i];
  cell1.appendChild(input);

  let resRow = resTable.insertRow();
  resRow.insertCell(0).innerText = matches[i];
  let cell2 = resRow.insertCell(1);
  let resInput = document.createElement('input');
  resInput.type = 'number'; resInput.min = 1; resInput.max = 3;
  if(weeklyResults[i]) resInput.value = weeklyResults[i];
  cell2.appendChild(resInput);
}

function submitPrediction() {
  if(!player) { alert('Geen speler-ID gevonden in URL.'); return; }
  let rowInputs = predTable.querySelectorAll('input');
  let values = [];
  for(let inp of rowInputs) { values.push(inp.value); }
  if(!predictions[player]) predictions[player] = {};
  predictions[player][week] = values;
  localStorage.setItem('predictions', JSON.stringify(predictions));
  alert('Voorspelling opgeslagen voor week ' + week + '!');
}

function calculatePoints() {
  let resultsInputs = resTable.querySelectorAll('input');
  for(let i=0; i<NUM_MATCHES; i++) { weeklyResults[i] = resultsInputs[i].value; }
  localStorage.setItem('results_week_' + week, JSON.stringify(weeklyResults));

  for(let name in predictions) {
    let weekPoints = 0;
    if(predictions[name][week]) {
      for(let i=0; i<NUM_MATCHES; i++) {
        if(predictions[name][week][i] === weeklyResults[i]) weekPoints++;
      }
    }
    if(!cumulativePoints[name]) cumulativePoints[name] = 0;
    cumulativePoints[name] += weekPoints;
  }
  localStorage.setItem('cumulativePoints', JSON.stringify(cumulativePoints));

  const overview = document.getElementById('overview-table');
  overview.innerHTML = '<tr><th>Deelnemer</th><th>Cumulatieve punten</th></tr>';
  for(let name in cumulativePoints) {
    let row = overview.insertRow();
    row.insertCell(0).innerText = name;
    row.insertCell(1).innerText = cumulativePoints[name];
  }
  alert('Punten berekend voor week ' + week + '!');
}
</script>

</body>
</html>
